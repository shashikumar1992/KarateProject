[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def id = 0","result":{"duration":5313700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"13:03:53.795 karate.env system property was: null \n","line":4}},{"name":"def payments = {}","result":{"duration":73373700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5}]},{"start_timestamp":"2025-02-13T07:33:53.539Z","line":7,"name":"pathMatches('\/payments') && methodIs('post')","description":"","id":"pathmatches('-payments')-&&-methodis('post')","type":"scenario","keyword":"Scenario","steps":[{"name":"def payment = request","result":{"duration":18104200,"error_message":"js failed:\n>>>>\n01: request\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"request\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:8","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8,"doc_string":{"content_type":"","value":"13:03:53.943 classpath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:8\n* def payment = request\njs failed:\n>>>>\n01: request\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"request\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:8\n","line":8}},{"name":"def id = ~~(id + 1)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payment.id = id","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"payments[id + ''] = payment","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def response = payment","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}],"tags":[]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def id = 0","result":{"duration":5260000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"13:03:53.795 karate.env system property was: null \n","line":4}},{"name":"def payments = {}","result":{"duration":73475599,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5}]},{"start_timestamp":"2025-02-13T07:33:53.539Z","line":14,"name":"pathMatches('\/payments')","description":"","id":"pathmatches('-payments')","type":"scenario","keyword":"Scenario","steps":[{"name":"def response = $payments.*","result":{"duration":4464500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}],"tags":[]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def id = 0","result":{"duration":1255700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"13:03:53.941 karate.env system property was: null \n","line":4}},{"name":"def payments = {}","result":{"duration":312900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5}]},{"start_timestamp":"2025-02-13T07:33:53.940Z","line":17,"name":"pathMatches('\/payments\/{id}') && methodIs('put')","description":"","id":"pathmatches('-payments-{id}')-&&-methodis('put')","type":"scenario","keyword":"Scenario","steps":[{"name":"payments[pathParams.id] = request","result":{"duration":4209899,"error_message":"js failed:\n>>>>\n01: payments[pathParams.id] = request\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:18","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":18,"doc_string":{"content_type":"","value":"13:03:53.950 classpath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:18\n* payments[pathParams.id] = request\njs failed:\n>>>>\n01: payments[pathParams.id] = request\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:18\n","line":18}},{"name":"def response = request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":19}],"tags":[]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def id = 0","result":{"duration":516999,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"13:03:53.961 karate.env system property was: null \n","line":4}},{"name":"def payments = {}","result":{"duration":403800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5}]},{"start_timestamp":"2025-02-13T07:33:53.960Z","line":21,"name":"pathMatches('\/payments\/{id}') && methodIs('delete')","description":"","id":"pathmatches('-payments-{id}')-&&-methodis('delete')","type":"scenario","keyword":"Scenario","steps":[{"name":"karate.remove('payments', pathParams.id)","result":{"duration":1531000,"error_message":"js failed:\n>>>>\n01: karate.remove('payments', pathParams.id)\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:22","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":22,"doc_string":{"content_type":"","value":"13:03:53.966 classpath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:22\n* karate.remove('payments', pathParams.id)\njs failed:\n>>>>\n01: karate.remove('payments', pathParams.id)\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:22\n","line":22}}],"tags":[]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def id = 0","result":{"duration":575699,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"13:03:53.961 karate.env system property was: null \n","line":4}},{"name":"def payments = {}","result":{"duration":354099,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5}]},{"start_timestamp":"2025-02-13T07:33:53.960Z","line":24,"name":"pathMatches('\/payments\/{id}')","description":"","id":"pathmatches('-payments-{id}')","type":"scenario","keyword":"Scenario","steps":[{"name":"def response = payments[pathParams.id]","result":{"duration":1479801,"error_message":"js failed:\n>>>>\n01: payments[pathParams.id]\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:25","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":25,"doc_string":{"content_type":"","value":"13:03:53.966 classpath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:25\n* def response = payments[pathParams.id]\njs failed:\n>>>>\n01: payments[pathParams.id]\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"pathParams\" is not defined\n- <js>.:program(Unnamed:1)\n\nclasspath:PostmanAPI\/APITEST\/mock\/payment-mock.feature:25\n","line":25}}],"tags":[]}],"name":"PostmanAPI\/APITEST\/mock\/payment-mock.feature","description":"payment service mock","id":"payment-service-mock","keyword":"Feature","uri":"PostmanAPI\/APITEST\/mock\/payment-mock.feature"}]